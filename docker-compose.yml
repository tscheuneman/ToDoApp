version: '3'
services:
  todo_app:
    volumes:
      - /var/www/todo/node_modules
      - ./Webserver:/var/www/todo
      - ./Provisioning/deployment/dev/dev.ormconfig.js:/var/www/todo/ormconfig.js
    environment:
      - ENV=DEV
      - REDIS_HOST=redis_todo
      - DB_TYPE=postgres
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_DB=todoapp
      - BASE_HASH=2DB74B3BDDDCF088A1A5C415ACFACBFC9D29254ECA17895ECD4CCA58718413ED
    container_name: todo_app
    restart: unless-stopped
    build:
      context: ./
      dockerfile: ./Provisioning/node.dockerfile
    tty: true
    working_dir: /var/www/todo
    ports:
      - "5000:5000"
    networks:
      - app-network
    links:
      - redis_todo
      - postgres

  # Set up redis
  redis_todo:
    image: "redis:alpine"
    container_name: redis_todo
    ports:
      - "6379:6379"
    networks:
      - app-network

  postgres:
    image: "postgres:11.7-alpine"
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: todoapp
    networks:
      - app-network
    volumes:
      - ./Provisioning/deployment/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
      - ./Provisioning/deployment/init-db-test.sql:/docker-entrypoint-initdb.d/init-db-test.sql

networks:
  app-network:
      driver: bridge